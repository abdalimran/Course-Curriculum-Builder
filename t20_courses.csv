link,title,description,instructor,price,rating,no_reviews,length,no_lectures,difficulty,curriculum
https://www.udemy.com/course/data-science-natural-language-processing-in-python/,Data Science: Natural Language Processing (NLP) in Python,"Applications: decrypting ciphers, spam detection, sentiment analysis, article spinners, and latent semantic analysis.",Lazy Programmer Inc.,$11.99,4.6,9890,10 total hours,76 lectures,All Levels,"{'Natural Language Processing - What is it used for?': ['Introduction and Outline', 'Why Learn NLP?', 'The Central Message of this Course (Big Picture Perspective)'], 'Course Preparation': ['How to Succeed in this Course', 'Where to get the code and data', 'How to Open Files for Windows Users'], 'Machine Learning Basics Review': ['Machine Learning: Section Introduction', 'What is Classification?', 'Classification in Code', 'What is Regression?', 'Regression in Code', 'What is a Feature Vector?', 'Machine Learning is Nothing but Geometry', 'All Data is the Same', 'Comparing Different Machine Learning Models', 'Machine Learning and Deep Learning: Future Topics', 'Section Summary'], 'Decrypting Ciphers': ['Section Introduction', 'Ciphers', 'Language Models', 'Genetic Algorithms', 'Code Preparation', 'Link to Cipher Notebook', 'Code pt 1', 'Code pt 2', 'Code pt 3', 'Code pt 4', 'Code pt 5', 'Code pt 6', 'Section Conclusion'], 'Build your own spam detector': ['Build your own spam detector - description of data', 'Build your own spam detector using Naive Bayes and AdaBoost - the code', 'Key Takeaway from Spam Detection Exercise', 'Naive Bayes Concepts', 'AdaBoost Concepts', 'Other types of features', 'Spam Detection FAQ (Remedial #1)', 'What is a Vector? (Remedial #2)', 'SMS Spam Example', 'SMS Spam in Code', 'Suggestion Box'], 'Build your own sentiment analyzer': ['Description of Sentiment Analyzer', 'Logistic Regression Review', 'Preprocessing: Tokenization', 'Preprocessing: Tokens to Vectors', 'Sentiment Analysis in Python using Logistic Regression', 'Sentiment Analysis Extension', 'How to Improve Sentiment Analysis & FAQ'], 'NLTK Exploration': ['NLTK Exploration: POS Tagging', 'NLTK Exploration: Stemming and Lemmatization', 'NLTK Exploration: Named Entity Recognition', 'Want more NLTK?'], 'Latent Semantic Analysis': ['Latent Semantic Analysis - What does it do?', 'SVD - The underlying math behind LSA', 'Latent Semantic Analysis in Python', 'What is Latent Semantic Analysis Used For?', 'Extending LSA'], 'Write your own article spinner': ['Article Spinning Introduction and Markov Models', 'Trigram Model', 'More about Language Models', 'Precode Exercises', 'Writing an article spinner in Python', 'Article Spinner Extension Exercises'], 'How to learn more about NLP': [""What we didn't talk about""]}"
https://www.udemy.com/course/nlp-natural-language-processing-with-python/,NLP - Natural Language Processing with Python,"Learn to use Machine Learning, Spacy, NLTK, SciKit-Learn, Deep Learning, and more to conduct Natural Language Processing",Jose Portilla,$11.99,4.6,8580,11.5 total hours,80 lectures,Intermediate,"{'Introduction': ['Course Overview - DO NOT SKIP THIS LECTURE PLEASE. IMPORTANT INFO HERE!', 'Quick Check', 'Curriculum Overview', 'Installation and Setup Lecture', 'FAQ - Frequently Asked Questions'], 'Python Text Basics': ['Introduction to Python Text Basics', 'Working with Text Files with Python - Part One', 'Working with Text Files with Python - Part Two', 'Working with PDFs', 'Regular Expressions Part One', 'Regular Expressions Part Two', 'Python Text Basics - Assessment Overview', 'Python Text Basics - Assessment Solutions'], 'Natural Language Processing Basics': ['Introduction to Natural Language Processing', 'Spacy Setup and Overview', 'What is Natural Language Processing?', 'Spacy Basics', 'Tokenization - Part One', 'Tokenization - Part Two', 'Stemming', 'Lemmatization', 'Stop Words', 'Phrase Matching and Vocabulary - Part One', 'Phrase Matching and Vocabulary - Part Two', 'NLP Basics Assessment Overview', 'NLP Basics Assessment Solution'], 'Part of Speech Tagging and Named Entity Recognition': ['Introduction to Section on POS and NER', 'Part of Speech Tagging', 'Visualizing Part of Speech', 'Named Entity Recognition - Part One', 'Named Entity Recognition - Part Two', 'Visualizing Named Entity Recognition', 'Sentence Segmentation', 'Part Of Speech Assessment', 'Part Of Speech Assessment - Solutions'], 'Text Classification': ['Introduction to Text Classification', 'Machine Learning Overview', 'Classification Metrics', 'Confusion Matrix', 'Scikit-Learn Primer - How to Use SciKit-Learn', 'Scikit-Learn Primer - Code Along Part One', 'Scikit-Learn Primer - Code Along Part Two', 'Text Feature Extraction Overview', 'Text Feature Extraction - Code Along Implementations', 'Text Feature Extraction - Code Along - Part Two', 'Text Classification Code Along Project', 'Text Classification Assessment Overview', 'Text Classification Assessment Solutions'], 'Semantics and Sentiment Analysis': ['Introduction to Semantics and Sentiment Analysis', 'Overview of Semantics and Word Vectors', 'Semantics and Word Vectors with Spacy', 'Sentiment Analysis Overview', 'Sentiment Analysis with NLTK', 'Sentiment Analysis Code Along Movie Review Project', 'Sentiment Analysis Project Assessment', 'Sentiment Analysis Project Assessment - Solutions'], 'Topic Modeling': ['Introduction to Topic Modeling Section', 'Overview of Topic Modeling', 'Latent Dirichlet Allocation Overview', 'Latent Dirichlet Allocation with Python - Part One', 'Latent Dirichlet Allocation with Python - Part Two', 'Non-negative Matrix Factorization Overview', 'Non-negative Matrix Factorization with Python', 'Topic Modeling Project - Overview', 'Topic Modeling Project - Solutions'], 'Deep Learning for NLP': ['Introduction to Deep Learning for NLP', 'The Basic Perceptron Model', 'Introduction to Neural Networks', 'Keras Basics - Part One', 'Keras Basics - Part Two', 'Recurrent Neural Network Overview', 'LSTMs, GRU, and Text Generation', 'Text Generation with LSTMs with Keras and Python - Part One', 'Text Generation with LSTMs with Keras and Python - Part Two', 'Text Generation with LSTMS with Keras - Part Three', 'Chat Bots Overview', 'Creating Chat Bots with Python - Part One', 'Creating Chat Bots with Python - Part Two', 'Creating Chat Bots with Python - Part Three', 'Creating Chat Bots with Python - Part Four'], 'BONUS SECTION: THANK YOU!': ['BONUS LECTURE']}"
https://www.udemy.com/course/natural-language-processing-with-deep-learning-in-python/,Natural Language Processing with Deep Learning in Python,"Complete guide on deriving and implementing word2vec, GloVe, word embeddings, and sentiment analysis with recursive nets","Lazy Programmer Team, Lazy Programmer Inc.",$39.99,4.7,6503,12 total hours,95 lectures,Expert,"{'Outline, Review, and Logistical Things': ['Introduction, Outline, and Review', 'How to Succeed in this Course', 'Where to get the code / data for this course', 'Preprocessed Wikipedia Data', 'How to Open Files for Windows Users'], ""Beginner's Corner: Working with Word Vectors"": ['What are vectors?', 'What is a word analogy?', 'Trying to find and assess word vectors using TF-IDF and t-SNE', 'Pretrained word vectors from GloVe', 'Pretrained word vectors from word2vec', 'Text Classification with word vectors', 'Text Classification in Code', 'Using pretrained vectors later in the course', 'Suggestion Box'], 'Review of Language Modeling and Neural Networks': ['Review Section Intro', 'Bigrams and Language Models', 'Bigrams in Code', 'Neural Bigram Model', 'Neural Bigram Model in Code', 'Neural Network Bigram Model', 'Neural Network Bigram Model in Code', 'Improving Efficiency', 'Improving Efficiency in Code', 'Review Section Summary'], 'Word Embeddings and Word2Vec': ['Return of the Bigram', 'CBOW', 'Skip-Gram', 'Hierarchical Softmax', 'Negative Sampling', 'Negative Sampling - Important Details', 'Why do I have 2 word embedding matrices and what do I do with them?', 'Word2Vec implementation tricks', 'Word2Vec implementation outline', 'Word2Vec in Code with Numpy', 'Tensorflow or Theano - Your Choice!', 'Word2Vec Tensorflow Implementation Details', 'Word2Vec Tensorflow in Code', 'Alternative to Wikipedia Data: Brown Corpus'], 'Word Embeddings using GloVe': ['GloVe Section Introduction', 'Matrix Factorization for Recommender Systems - Basic Concepts', 'Matrix Factorization Training', 'Expanding the Matrix Factorization Model', 'Regularization for Matrix Factorization', 'GloVe - Global Vectors for Word Representation', 'Recap of ways to train GloVe', 'GloVe in Code - Numpy Gradient Descent', 'GloVe in Code - Alternating Least Squares', 'GloVe in Tensorflow with Gradient Descent', 'Visualizing country analogies with t-SNE', 'Hyperparameter Challenge', 'Training GloVe with SVD (Singular Value Decomposition)'], 'Unifying Word2Vec and GloVe': ['Pointwise Mutual Information - Word2Vec as Matrix Factorization', 'PMI in Code'], 'Using Neural Networks to Solve NLP Problems': ['Parts-of-Speech (POS) Tagging', 'How can neural networks be used to solve POS tagging?', 'Parts-of-Speech Tagging Baseline', 'Parts-of-Speech Tagging Recurrent Neural Network in Theano', 'Parts-of-Speech Tagging Recurrent Neural Network in Tensorflow', 'How does an HMM solve POS tagging?', 'Parts-of-Speech Tagging Hidden Markov Model (HMM)', 'Named Entity Recognition (NER)', 'Comparing NER and POS tagging', 'Named Entity Recognition Baseline', 'Named Entity Recognition RNN in Theano', 'Named Entity Recognition RNN in Tensorflow', 'Hyperparameter Challenge II'], 'Recursive Neural Networks (Tree Neural Networks)': ['Recursive Neural Networks Section Introduction', 'Sentences as Trees', 'Data Description for Recursive Neural Networks', 'What are Recursive Neural Networks / Tree Neural Networks (TNNs)?', 'Building a TNN with Recursion', 'Trees to Sequences', 'Recursive Neural Tensor Networks', 'RNTN in Tensorflow (Tips)', 'RNTN in Tensorflow (Code)', 'Recursive Neural Network in TensorFlow with Recursion'], 'Theano and Tensorflow Basics Review': ['(Review) Theano Basics', '(Review) Theano Neural Network in Code', '(Review) Tensorflow Basics', '(Review) Tensorflow Neural Network in Code'], 'Setting Up Your Environment (FAQ by Student Request)': ['Anaconda Environment Setup', 'How to install Numpy, Scipy, Matplotlib, Pandas, IPython, Theano, and TensorFlow']}"
https://www.udemy.com/course/chatbot/,Deep Learning and NLP A-Z™: How to create a ChatBot,Learn the Theory and How to implement state of the art Deep Natural Language Processing models in Tensorflow and Python,"Hadelin de Ponteves, Kirill Eremenko, Zillion Hand Team, Ligency Team",$11.99,4.4,4020,12 total hours,96 lectures,All Levels,"{'Welcome to the course!': ['Get Excited!', 'Applications', 'BONUS: Learning Paths', 'Some Additional Resources!!', 'This PDF resource will help you a lot!', 'Your Shortcut To Becoming A Better Data Scientist!'], 'Deep NLP Intuition': [""What You'll Need For This Module"", 'Updates on Udemy Reviews', 'Plan of Attack', 'Types of Natural Language Processing', 'Classical vs Deep Learning Models', 'End-to-end Deep Learning Models', 'Bag-of-words model', 'Seq2Seq Architecture (Part 1)', 'Seq2Seq Architecture (Part 2)', 'Seq2Seq Training', 'Beam Search Decoding', 'Attention Mechanisms (Part 1)', 'Attention Mechanisms (Part 2)'], 'Building a ChatBot with Deep NLP': ['ChatBot - Step 1', 'ChatBot - Step 2', 'ChatBot - Step 3'], '---------- PART 1 - DATA PREPROCESSING ----------': ['Welcome to Part 1 - Data Preprocessing', 'ChatBot - Step 4', 'ChatBot - Step 5', 'ChatBot - Step 6', 'ChatBot - Step 7', 'ChatBot - Step 8', 'ChatBot - Step 9', 'ChatBot - Step 10', 'ChatBot - Step 11', 'ChatBot - Step 12', 'ChatBot - Step 13', 'ChatBot - Step 14', 'ChatBot - Step 15', 'ChatBot - Step 16', 'ChatBot - Step 17', 'Checkpoint!'], '---------- PART 2 - BUILDING THE SEQ2SEQ MODEL ----------': [""What You'll Need For This Module"", 'Welcome to Part 2 - Building the Seq2Seq Model', 'ChatBot - Step 18', 'ChatBot - Step 19', 'ChatBot - Step 20', 'ChatBot - Step 21', 'ChatBot - Step 22', 'ChatBot - Step 23', 'ChatBot - Step 24', 'Checkpoint!'], '---------- PART 3 - TRAINING THE SEQ2SEQ MODEL ----------': [""What You'll Need For This Module"", 'Welcome to Part 3 - Training the Seq2Seq Model', 'ChatBot - Step 25', 'ChatBot - Step 26', 'ChatBot - Step 27', 'ChatBot - Step 28', 'ChatBot - Step 29', 'ChatBot - Step 30', 'ChatBot - Step 31', 'ChatBot - Step 32', 'ChatBot - Step 33', 'ChatBot - Step 34', 'ChatBot - Step 35', 'ChatBot - Step 36', 'Checkpoint!'], '---------- PART 4 - TESTING THE SEQ2SEQ MODEL ----------': [""What You'll Need For This Module"", 'Welcome to Part 4 - Testing the Seq2Seq Model', 'ChatBot - Step 37', 'ChatBot - Step 38', 'ChatBot - Step 39', 'ChatBot - Step 40', 'Checkpoint!', 'Training the ChatBot on Google Colab with GPU'], '---------- PART 5 - IMPROVING & TUNING THE SEQ2SEQ MODEL ----------': ['ChatBot - Step 41: Improving & Tuning the ChatBot', 'ChatBot - Step 42: Introduction to a new model & setup', 'ChatBot - Step 43: Chatbot model discussion', 'ChatBot - Step 44: Tensorboard', 'ChatBot - Step 45: Run the new chatbot model'], 'Other ChatBot Implementations': [""What You'll Need For This Module"", 'The Best ChatBot', 'A ChatBot Implementation in TensorFlow 1.4', 'A ChatBot Implementation in PyTorch', 'THANK YOU bonus video'], 'Annex 1: Artificial Neural Networks': ['Plan of Attack', 'The Neuron', 'The Activation Function', 'How do Neural Networks work?', 'How do Neural Networks learn?', 'Gradient Descent', 'Stochastic Gradient Descent', 'Backpropagation']}"
https://www.udemy.com/course/deep-learning-convolutional-neural-networks-theano-tensorflow/,Deep Learning: Convolutional Neural Networks in Python,"Use CNNs for Image Recognition, Natural Language Processing (NLP) +More! For Data Science, Machine Learning, and AI",Lazy Programmer Inc.,$17.99,4.6,3647,12 total hours,78 lectures,All Levels,"{'Welcome': ['Introduction and Outline', 'Where to get the code', 'How to Succeed in this Course'], 'Google Colab': ['Intro to Google Colab, how to use a GPU or TPU for free', 'Uploading your own data to Google Colab', 'Where can I learn about Numpy, Scipy, Matplotlib, Pandas, and Scikit-Learn?'], 'Machine Learning and Neurons': ['Review Section Introduction', 'What is Machine Learning?', 'Code Preparation (Classification Theory)', ""Beginner's Code Preamble"", 'Classification Notebook', 'Exercise: Predicting Diabetes Onset', 'Code Preparation (Regression Theory)', 'Regression Notebook', 'Exercise: Real Estate Predictions', 'The Neuron', 'How does a model ""learn""?', 'Making Predictions', 'Saving and Loading a Model', 'Suggestion Box'], 'Feedforward Artificial Neural Networks': ['Artificial Neural Networks Section Introduction', 'Forward Propagation', 'The Geometrical Picture', 'Activation Functions', 'Multiclass Classification', 'How to Represent Images', 'Code Preparation (ANN)', 'ANN for Image Classification', 'ANN for Regression', 'Exercise: E. Coli Protein Localization Sites'], 'Convolutional Neural Networks': ['What is Convolution? (part 1)', 'What is Convolution? (part 2)', 'What is Convolution? (part 3)', 'Convolution on Color Images', 'CNN Architecture', 'CNN Code Preparation', 'CNN for Fashion MNIST', 'CNN for CIFAR-10', 'Data Augmentation', 'Batch Normalization', 'Improving CIFAR-10 Results', 'Exercise: Facial Expression Recognition'], 'Natural Language Processing (NLP)': ['Embeddings', 'Code Preparation (NLP)', 'Text Preprocessing', 'CNNs for Text', 'Text Classification with CNNs', 'Exercise: Sentiment Analysis'], 'Convolution In-Depth': ['Real-Life Examples of Convolution', ""Beginner's Guide to Convolution"", 'Alternative Views on Convolution'], 'Convolutional Neural Network Description': ['Convolution on 3-D Images', 'Tracking Shapes in a CNN'], 'Practical Tips': ['Advanced CNNs and how to Design your Own'], 'In-Depth: Loss Functions': ['Mean Squared Error', 'Binary Cross Entropy', 'Categorical Cross Entropy']}"
https://www.udemy.com/course/deep-learning-advanced-nlp/,Deep Learning: Advanced NLP and RNNs,"Natural Language Processing with Sequence-to-sequence (seq2seq), Attention, CNNs, RNNs, and Memory Networks!",Lazy Programmer Inc.,$11.99,4.6,3575,8.5 total hours,65 lectures,All Levels,"{'Welcome': ['Introduction', 'Outline', 'Where to get the code', 'How to Succeed in this Course'], 'Recurrent Neural Networks, Convolutional Neural Networks, and Word Embeddings': ['Review Section Introduction', 'How to Open Files for Windows Users', 'What is a word embedding?', 'Using word embeddings', 'What is a CNN?', 'Where to get the data', 'CNN Code (part 1)', 'CNN Code (part 2)', 'What is an RNN?', 'GRUs and LSTMs', 'Different Types of RNN Tasks', 'A Simple RNN Experiment', 'RNN Code', 'Review Section Summary', 'Suggestion Box'], 'Bidirectional RNNs': ['Bidirectional RNNs Motivation', 'Bidirectional RNN Experiment', 'Bidirectional RNN Code', 'Image Classification with Bidirectional RNNs', 'Image Classification Code', 'Bidirectional RNNs Section Summary'], 'Sequence-to-sequence models (Seq2Seq)': ['Seq2Seq Theory', 'Seq2Seq Applications', 'Decoding in Detail and Teacher Forcing', 'Poetry Revisited', 'Poetry Revisited Code 1', 'Poetry Revisited Code 2', 'Seq2Seq in Code 1', 'Seq2Seq in Code 2', 'Seq2Seq Section Summary'], 'Attention': ['Attention Section Introduction', 'Attention Theory', 'Teacher Forcing', 'Helpful Implementation Details', 'Attention Code 1', 'Attention Code 2', 'Visualizing Attention', 'Building a Chatbot without any more Code', 'Attention Section Summary'], 'Memory Networks': ['Memory Networks Section Introduction', 'Memory Networks Theory', 'Memory Networks Code 1', 'Memory Networks Code 2', 'Memory Networks Code 3', 'Memory Networks Section Summary'], 'Keras and Tensorflow 2 Basics': ['(Review) Keras Discussion', '(Review) Keras Neural Network in Code', '(Review) Keras Functional API', '(Review) How to easily convert Keras into Tensorflow 2.0 code'], 'Setting Up Your Environment (FAQ by Student Request)': ['Anaconda Environment Setup', 'How to How to install Numpy, Theano, Tensorflow, etc...'], 'Extra Help With Python Coding for Beginners (FAQ by Student Request)': ['How to Code by Yourself (part 1)', 'How to Code by Yourself (part 2)', 'Proof that using Jupyter Notebook is the same as not using it', 'Python 2 vs Python 3'], 'Effective Learning Strategies for Machine Learning (FAQ by Student Request)': ['How to Succeed in this Course (Long Version)', 'Is this for Beginners or Experts? Academic or Practical? Fast or slow-paced?', 'Machine Learning and AI Prerequisite Roadmap (pt 1)', 'Machine Learning and AI Prerequisite Roadmap (pt 2)']}"
https://www.udemy.com/course/deep-learning-recurrent-neural-networks-in-python/,Deep Learning: Recurrent Neural Networks in Python,"GRU, LSTM, Time Series Forecasting, Stock Predictions, Natural Language Processing (NLP) using Artificial Intelligence",Lazy Programmer Inc.,$17.99,4.6,3330,12 total hours,75 lectures,All Levels,"{'Welcome': ['Introduction and Outline', 'Where to get the Code', 'How to Succeed in this Course'], 'Google Colab': ['Intro to Google Colab, how to use a GPU or TPU for free', 'Uploading your own data to Google Colab', 'Where can I learn about Numpy, Scipy, Matplotlib, Pandas, and Scikit-Learn?'], 'Machine Learning and Neurons': ['Review Section Introduction', 'What is Machine Learning?', 'Code Preparation (Classification Theory)', ""Beginner's Code Preamble"", 'Classification Notebook', 'Exercise: Predicting Diabetes Onset', 'Code Preparation (Regression Theory)', 'Regression Notebook', 'Exercise: Real Estate Predictions', 'The Neuron', 'How does a model ""learn""?', 'Making Predictions', 'Saving and Loading a Model', 'Suggestion Box'], 'Feedforward Artificial Neural Networks': ['Artificial Neural Networks Section Introduction', 'Forward Propagation', 'The Geometrical Picture', 'Activation Functions', 'Multiclass Classification', 'How to Represent Images', 'Code Preparation (ANN)', 'ANN for Image Classification', 'ANN for Regression', 'Exercise: E. Coli Protein Localization Sites'], 'Recurrent Neural Networks, Time Series, and Sequence Data': ['Sequence Data', 'Forecasting', 'Autoregressive Linear Model for Time Series Prediction', 'Proof that the Linear Model Works', 'Recurrent Neural Networks', 'RNN Code Preparation', 'RNN for Time Series Prediction', 'Paying Attention to Shapes', 'GRU and LSTM (pt 1)', 'GRU and LSTM (pt 2)', 'A More Challenging Sequence', 'Demo of the Long Distance Problem', 'RNN for Image Classification (Theory)', 'RNN for Image Classification (Code)', 'Stock Return Predictions using LSTMs (pt 1)', 'Stock Return Predictions using LSTMs (pt 2)', 'Stock Return Predictions using LSTMs (pt 3)', 'Other Ways to Forecast'], 'Natural Language Processing (NLP)': ['Embeddings', 'Code Preparation (NLP)', 'Text Preprocessing', 'Text Classification with LSTMs', 'Exercise: Sentiment Analysis'], 'In-Depth: Loss Functions': ['Mean Squared Error', 'Binary Cross Entropy', 'Categorical Cross Entropy'], 'In-Depth: Gradient Descent': ['Gradient Descent', 'Stochastic Gradient Descent', 'Momentum', 'Variable and Adaptive Learning Rates', 'Adam (pt 1)', 'Adam (pt 2)'], 'Extras': ['Colab Notebooks'], 'Setting Up Your Environment (FAQ by Student Request)': ['Anaconda Environment Setup', 'How to install Numpy, Scipy, Matplotlib, Pandas, IPython, Theano, and TensorFlow']}"
https://www.udemy.com/course/natural-language-processing/,Introduction to Natural Language Processing (NLP),Learn how to analyze text data.,Brian Sacash,$11.99,4.3,2473,3 total hours,41 lectures,Beginner,"{'Course Introduction': ['Course Intro and Outline'], 'Setup': ['Windows Setup', 'OS X Setup'], 'Python Refresher': ['Lists', 'Dictionaries', 'Loops and Conditionals', 'Functions'], 'NLTK and the Basics': ['Overview - The Natural Language Tool Kit', 'Counting Text', 'Example - Words Per Sentence Trends', 'Frequency Distribution', 'Conditional Frequency Distribution', 'Example - Informative Words', 'Bigrams', 'Overview - Regular Expressions', 'Regular Expression Practice'], 'Tokenization , Tagging, Chunking': ['Overview - Tokenization', 'Tokenization', 'Normalizing', 'Part of Speech Tagging', 'Example - Multiple Parts of Speech', 'Example - Choices', 'Chunking', 'Named Entity Recognition'], 'Custom Sources': ['Overview - Character Encoding', 'Text File', 'HTML', 'URL', 'CSV File', 'Exporting', 'NLTK Resources', 'Example - Remove Stopwords'], 'Projects': ['Sentiment Analysis Intro', 'Basic Sentiment Analysis', 'Gender Prediction Intro', 'Gender Prediction', 'TF-IDF Intro', 'TF-IDF'], 'Appendix': ['Additional NLP Resources', 'Learning Python', 'Future Course Content']}"
https://www.udemy.com/course/modern-nlp/,Modern Natural Language Processing in Python,Solve Seq2Seq and Classification NLP tasks with Transformer and CNN using Tensorflow 2 in Google Colab,"Martin Jocqueviel, Ligency Team",$11.99,4.2,1292,6 total hours,39 lectures,Intermediate,"{'Introduction': ['Welcome! NLP introduction & course overview', 'Course curriculum, Colab toolkit and data links', 'BONUS: Learning Path', 'Get the materials'], 'CNN for NLP - Intuition': ['Introduction', 'Basic CNN', 'Image to text', 'Image for word embedding from the session 7', 'CNN for NLP'], 'CNN for NLP - Application (sentimental analysis)': ['Introduction', 'Dependencies', 'Loading Files', 'Cleaning', 'Inputs creation', 'Model', 'Configuration', 'Training', 'Evaluation'], 'Transformer - Intuition': ['Introduction', 'Old fashioned', 'General understanding', 'Attention', 'Positional encoding', 'Last details'], 'Transformer - Application': ['Introduction', 'Dependencies', 'Loading Files', 'Cleaning', 'Tokenizing', 'Max Length', 'Inputs Creation', 'Positional encoding', 'Scaled dot product attention', 'Multi head attention', 'Encoder', 'Decoder', 'Transformer', 'Training', 'Evaluation']}"
https://www.udemy.com/course/hands-on-natural-language-processing-using-python/,Hands On Natural Language Processing (NLP) using Python,"Learn Natural Language Processing ( NLP ) & Text Mining by creating text classifier, article summarizer, and many more.",Next Edge Coding,$17.99,4.4,1273,10.5 total hours,93 lectures,All Levels,"{'Introduction to the Course': ['What is NLP?', 'Getting the Course Resources', 'Getting the Course Resources - Text'], 'Getting the required softwares': ['Installing Anaconda Python', 'Installing Anaconda Python - Text', 'A tour of Spyder IDE', 'How to take this course?'], 'Python Crash Course': ['Variables and Operations in Python', 'Conditional Statements', 'Introduction to Loops', 'Loop Control Statements', 'Python Data Structures - Lists', 'Python Data Structures - Tuples', 'Python Data Structures - Dictionaries', 'Console and File I/O in Python', 'Introduction to Functions', 'Introduction to Classes and Objects', 'List Comprehension', 'Test Your Skills'], 'Regular Expressions': ['Introduction to Regular Expressions', 'Finding Patterns in Text Part 1', 'Finding Patterns in Text Part 2', 'Substituting Patterns in Text', 'Shorthand Character Classes', 'Character Ranges - Text', 'Preprocessing using Regex', 'Test Your Skills'], 'Numpy and Pandas': ['Introduction to Numpy', 'Introduction to Pandas'], 'NLP Core': ['Installing NLTK in Python', 'Tokenizing Words and Sentences', 'How tokenization works? - Text', 'Introduction to Stemming and Lemmatization', 'Stemming using NLTK', 'Lemmatization using NLTK', 'Stop word removal using NLTK', 'Parts Of Speech Tagging', 'POS Tag Meanings', 'Named Entity Recognition', 'Text Modelling using Bag of Words Model', 'Building the BOW Model Part 1', 'Building the BOW Model Part 2', 'Building the BOW Model Part 3', 'Building the BOW Model Part 4', 'Text Modelling using TF-IDF Model', 'Building the TF-IDF Model Part 1', 'Building the TF-IDF Model Part 2', 'Building the TF-IDF Model Part 3', 'Building the TF-IDF Model Part 4', 'Understanding the N-Gram Model', 'Building Character N-Gram Model', 'Building Word N-Gram Model', 'Understanding Latent Semantic Analysis', 'LSA in Python Part 1', 'LSA in Python Part 2', 'Word Synonyms and Antonyms using NLTK', 'Word Negation Tracking in Python Part 1', 'Word Negation Tracking in Python Part 2'], 'Project 1 - Text Classification': ['Getting the data for Text Classification', 'Getting the data for Text Classification - Text', 'Importing the dataset', 'Persisting the dataset', 'Preprocessing the data', 'Transforming data into BOW Model', 'Transform BOW model into TF-IDF Model', 'Creating training and test set', 'Understanding Logistic Regression', 'Training our classifier', 'Testing Model performance', 'Saving our Model', 'Importing and using our Model'], 'Project 2 - Twitter Sentiment Analysis': ['Setting up Twitter Application', 'Initializing Tokens', 'Client Authentication', 'Fetching real time tweets', 'Loading TF-IDF Model and Classifier', 'Preprocessing the tweets', 'Predicting sentiments of tweets', 'Plotting the results'], 'Project 3 - Text Summarization': ['Understanding Text Summarization', 'Fetching article data from the web', 'Parsing the data using Beautiful Soup', 'Preprocessing the data', 'Tokenizing Article into sentences', 'Building the histogram', 'Calculating the sentence scores', 'Getting the summary'], 'Word2Vec Analysis': ['Understanding Word Vectors', 'Importing the data', 'Preparing the data', 'Training the Word2Vec Model', 'Testing Model Performance', 'Improving the Model', 'Exploring Pre-trained Models']}"
https://www.udemy.com/course/understand-and-practice-ai-natural-language-processing-in-python/,U&P AI - Natural Language Processing (NLP) with Python,"Become an NLP Engineer by creating real projects using Python, semantic search, text mining and search engines!",Abdulhadi Darwish,$11.99,4.1,1146,6 total hours,72 lectures,Beginner,"{'Getting an Idea of NLP and its Applications': ['Note!', 'Introduction to NLP', 'By The End Of This Section', 'Installation', 'Tips', 'U - Tokenization', 'P - Tokenization', 'U - Stemming', 'P - Stemming', 'U - Lemmatization', 'P - Lemmatization', 'U - Chunks', 'P - Chunks', 'U - Bag Of Words', 'P - Bag Of Words', 'U - Category Predictor', 'P - Category Predictor', 'U - Gender Identifier', 'P - Gender Identifier', 'U - Sentiment Analyzer', 'P - Sentiment Analyzer', 'U - Topic Modeling', 'P - Topic Modeling', 'Summary'], 'Feature Engineering': ['Using Google Colab', 'Introduction', 'One Hot Encoding', 'Count Vectorizer', 'N-grams', 'Hash Vectorizing', 'Word Embedding', 'FastText'], 'Dealing with corpus and WordNet': ['Introduction', 'In-built corpora', 'External Corpora', 'Corpuses & Frequency Distribution', 'Frequency Distribution', 'WordNet', 'Wordnet with Hyponyms and Hypernyms', 'The Average according to WordNet'], 'Create your Vocabulary for any NLP Model': ['Putting the previous knowledge together', 'Introduction and Challenges', '1 - Building your Vocabulary', '2 - Building your Vocabulary', '3 - Building your Vocabulary', '4 - Building your Vocabulary', '5 - Building your Vocabulary', 'Dot Product', 'Similarity using Dot Product', 'Reducing Dimensions of your Vocabulary using token improvement', 'Reducing Dimensions of your Vocabulary using n-grams', 'Reducing Dimensions of your Vocabulary using normalizing', 'Reducing Dimensions of your Vocabulary using case normalization', 'When to use stemming and lemmatization?', 'Sentiment Analysis Overview', 'Two approaches for sentiment analysis', 'Sentiment Analysis using rule-based', 'Sentiment Analysis using machine learning - 1', 'Sentiment Analysis using machine learning - 2', 'Summary'], 'Word2Vec in Detail and what is going on under the hood': ['Introduction', 'Bag of words in detail', 'Vectorizing', 'Vectorizing and Cosine Similarity', 'Topic modeling in Detail', 'Make your Vectors will more reflect the Meaning, or Topic, of the Document', 'Sklearn in a short way', 'Summary'], 'Find and Represent the Meaning or Topic of Natural Language Text': ['Note!', 'Keyword Search VS Semantic Search', 'Problems in TI-IDF leads to Semantic Search', 'Transform TF-IDF Vectors to Topic Vectors under the hood']}"
https://www.udemy.com/course/learn-data-science-deep-learning-machine-learning-nlp-r/,"Learn Data Science Deep Learning, Machine Learning NLP & R","Learn Data Science, Deep Learning, Machine Learning, Natural Language Processing, R and Python Language with libraries",Cinnamon TechX,$11.99,4.5,667,70.5 total hours,620 lectures,All Levels,"{'Introduction': ['Introduction'], 'Installing Software': ['How to Download Anaconda', 'VERY IMPORTANT NOTE FOR STUDENTS!!', 'How to Download R Studio'], 'Data Science with Python': ['Introduction to NumPy', 'Understanding Data Types in Python', 'Fixed Type Arrays in Python', 'Creating Arrays from Scratch', 'The Basics of NumPy Arrays', 'Array Slicing - Accessing Subarrays', 'Reshaping of Arrays', 'Splitting of Arrays', 'Splitting of Arrays - 2', ""Exploring NumPy's UFuncs"", 'Exponents and Logarithms', 'Advanced UFunc Functions', 'Aggregations', 'Example US Presidents', 'Computation on Arrays - Broadcasting', 'Broadcasting Example', 'Broadcasting in Practice', 'Comparisons, Masks and Boolean Logic', 'Boolean Operators', 'Boolean Arrays as Masks', 'Fancy Indexing', 'Combined Indexing', 'Modifying values with Fancy Indexing', 'Example Binning Data', 'Sorting Arrays', 'Fast Sorting in NumPy', 'Example: k-Nearest Neighbors', ""Structured Data - NumPy's Structured Arrays"", 'More Advanced Component Types'], 'Data Manipulation with Pandas': ['Introduction', 'Installing and Using Pandas', 'Introducing Pandas Objects', 'Constructing Series Objects', 'The Pandas DataFrame Object', 'DataFrame as a specialized Dictionary', 'The Pandas Index Object', 'Data Indexing and Selection', 'Data Selection in DataFrame', 'DataFrame as two-dimensional array', 'Operating on Data in Pandas', 'UFuncs Index Alignment', 'Index alignment in DataFrame', 'Ufuncs Operations Between DataFrame and Series', 'Handling Missing Data', 'Missing Data in Pandas', 'NaN and None in Pandas', 'Operating on Null Values', 'Hierarchical Indexing', 'The better way Pandas MultiIndex', 'Methods of MultiIndex Creation', 'MultiIndex for columns', 'Indexing and Slicing a MultiIndex', 'Rearranging Multi-Indices', 'Index setting and resetting', 'Data Aggregations on Multi-Indices', 'Combining Datasets Concat and Append', 'Duplicate indices', 'Catching the repeats as an error', 'Combining Datasets Merge and Join', 'Specification of the Merge Key', 'Specifying Set Arithmetic for Joins', 'Example US States Data', 'Example US States Data - 2', 'Aggregation and Grouping', 'GroupBy Split, Apply, Combine', 'Iteration over groups', 'Aggregate, filter, transform, apply', 'Transformation', 'Pivot Tables', 'Pivot Table Syntax', 'Example Birthrate Data', 'Vectorized String Operations', 'Methods using regular expressions', 'Working with Time Series', 'Dates and times in Pandas Best of both worlds', 'Pandas Time Series Data Structures', 'Example Visualizing Seattle Bicycle Counts', 'Example Visualizing Seattle Bicycle Counts - 1', 'High-Performance Pandas eval() and query()', 'pandas.eval() for Efficient Operations', 'DataFrame.eval() for Column-Wise Operations'], 'Data Visualization with Matplotlib': ['Visualization with Matplotlib', 'Plotting from an IPython Shell', 'Two Interfaces for the Price of one', 'Simple Line Plots', 'Adjusting the Plot - Axes Limits', 'Simple Scatter Plots', 'Scatter Plots with plt.scatter', 'Basic Errorbars', 'Density and Contour Plots', 'Histograms, Binnings, and Density', 'plt.hexbin - Hexagonal binnings', 'Customizing Plot Legends', 'Legend for Size of Points', 'Multiple Legends', 'Customizing Color-bars', 'Color limits and extensions', 'Example Handwritten Digits', 'Multiple Subplots', 'plt.subplots The Whole Grid in One Go', 'Text and Annotation', 'Arrows and Annotation', 'Major and Minor Ticks', 'Reducing or Increasing the Number of Ticks', 'Customizing Matplotlib Configurations and Stylesheets', 'Changing the Defaults rcParams', 'Stylesheets', 'Three-Dimensional Plotting in Matplotlib', 'Wireframes and Surface Plots', 'Example Visualizing a Möbius strip', 'Geographic Data with Basemap', 'Map Projections', 'Seaborn Versus Matplotlib', 'Pair plots', 'Bar Plots'], '||Machine Learning with Python||': ['Data Wrangling', 'Creating a DataFrame', 'Describing the Data', 'Selecting Rows based on Conditionals', 'Renaming Columns', 'Finding the Minimum, Maximum, Sum, Average and Count', 'Handling Missing Values', 'Deleting a Row & Dropping Duplicate Rows', 'Grouping Values by Variables', 'Looping over a column', 'Concatenating DataFrames', 'Merging DataFrames'], 'Handling Categorical Data': ['Encoding Nominal Categorical Data', 'Encoding Ordinal Categorical Features', 'Encoding Dictionaries of Features', 'Imputing Missing Class Values', 'Handling Imbalanced Classes'], 'Handling Missing Values': ['Rescaling a Feature', 'Normalizing Observations'], 'Handling Numerical Data': ['Transforming Features', 'Detecting Outliers', 'Handling Outliers', 'Discretizating Features', 'Grouping Observations using Clustering'], 'Loading Data': ['Loading Data']}"
https://www.udemy.com/course/text-mining-and-natural-language-processing-in-r/,Text Mining and Natural Language Processing in R,Hands-on text mining and natural language processing (NLP) training for data science applications in R,Minerva Singh,$11.99,4.5,657,8.5 total hours,81 lectures,All Levels,"{'INTRODUCTION TO THE COURSE: The Key Concepts and Software Tools': ['About the Course and Instructor', 'Data and Scripts For the Course', 'Introduction to R and RStudio', 'Conclusion to Section 1'], 'Reading in Data from Different Sources': ['Read in CSV & Excel Data', 'Read in Data from Online CSV', 'Read in Zipped File', 'Read Data from a Database', 'Read in JSON Data', 'Read in Data from PDF Documents', 'Read in Tables from PDF Documents', 'Conclusion to Section 2'], 'Webscraping: Extract Data from Webpages': ['Read in Data From Online Google Sheets', 'Read in Data from Online HTML Tables-Part 1', 'Read in Data from Online HTML Tables-Part 2', 'Get and Clean Data from HTML Tables', 'Read Text Data from an HTML Page', 'Introduction to Selector Gadget', 'More Webscraping With rvest-IMDB Webpage', 'Another Way of Accessing Webpage Elements', 'Conclusions to Section 3'], 'Introduction to APIs': ['What is an API?', 'Extract Text Data from Guardian Newspaper'], 'Text Data Mining from Social Media': ['Extract Data from Facebook', 'Get More out Of Facebook', 'Set up a Twitter App for Mining Data from Twitter', 'Extract Tweets Using R', 'More Twitter Data Extraction Using R', 'Get Tweet Locations', 'Get Location Specific Trends', 'Learn More About the Followers of a Twitter Handle', 'Another Way of Extracting Information From Twitter- the rtweet Package', 'Geolocation Specific Tweets With ""rtweet""', 'More Data Extraction Using rtweet', 'Locations of Tweets', 'Mining Github Using R', 'Set up the FourSquare App', 'Extract Reviews for Venues on FourSquare', 'Conclusions to Section 5'], 'Exploring Text Data For Preliminary Ideas': ['Explore Tweet Data', 'A Brief Explanation', 'EDA With Text Data', 'Examine Multiple Document Corpus of Text', 'Brief Introduction to tidytext', 'Text Exploration & Visualization with tidytext', 'Explore Multiple Texts with tidytext', 'Count Unique Words in Tweets', 'Visualizing Text Data as TF-IDF', 'TF-IDF in Graphical Form', 'Conclusions to Section 6'], 'Natural Language Processing: Sentiment Analysis': [""Wordclouds for Visualizing Tweet Sentiments: India's Demonetization Policy"", 'Wordclouds for Visualizing Reviews', 'Tidy Wordclouds', 'Quanteda Wordcloud', 'Word Frequency in Text Data', ""Tweet Sentiments- Mugabe's Ouster"", 'Tidy Sentiments- Sentiment Analysis Using tidytext', 'Examine the Polarity of Text', 'Examine the Polarity of Tweets', 'Topic Modelling a Document', 'Topic Modelling Multiple Documents', 'Topic Modelling Tweets Using Quanteda', 'Conclusions to Section 7'], 'Text Data and Machine Learning': ['Clustering for Text Data', 'Clustering Tweets with Quanteda', 'Regression on Text Data', 'Identify Spam Emails with Supervised Classification', 'Introduction to RTextTools', 'More on RTextTools', 'Classifying Textual Data', 'ML Approaches For Predicting a Binary Outcome in Text Data', 'ML Approaches For Predicting a Multi-Class Outcome in Text Data'], 'Network Analysis': ['A Small (Social) Network', 'A More Theoretical Explanation', 'Build & Visualize a Network', 'Network of Emails', 'More on Network Visualization', 'Analysis of Tweet Network', 'Identify Word Pair Networks', 'Network of Words', ""Text Analysis of Jane Austen's Mansfield Park"", 'Github']}"
https://www.udemy.com/course/nlp-in-python/,2021 Natural Language Processing in Python for Beginners,"Text Cleaning, Spacy, NLTK, Scikit-Learn, Deep Learning, word2vec, GloVe, LSTM for Sentiment, Emotion, Spam & CV Parsing",Laxmi Kant,$11.99,4.5,330,28 total hours,278 lectures,All Levels,"{'Introduction': ['Machine Learning Intuition', 'Course Overview', 'DO NOT SKIP IT | Resources Folder!', 'Install Anaconda and Python 3 on Windows 10', 'Install Anaconda and Python 3 on Ubuntu Machine', 'Install Anaconda and Python 3 on Mac Machine', 'Install Git Bash and Commander Terminal', 'Jupyter Notebook Shortcuts'], 'Python Crash Course': ['Introduction', 'Data Types', 'Variable Assignment', 'String Assignment', 'List', 'Set', 'Tuple', 'Dictionary', 'Boolean and Comparison Operator', 'Logical Operator', 'If, Else, Elif', 'Loops in Python', 'Methods and Lambda Function'], 'Numpy Introduction [Optional]': ['Introduction', 'Array', 'NaN and INF', 'Statistical Operations', 'Shape, Reshape, Ravel, Flatten', 'Sequence, Repetitions, and Random Numbers', 'Where(), ArgMax(), ArgMin()', 'File Read and Write', 'Concatenate and Sorting', 'Working with Dates'], 'Pandas Introduction [Optional]': ['Introduction', 'DataFrame and Series', 'File Reading and Writing', 'Info, Shape, Duplicated, and Drop', 'Columns', 'NaN and Null Values', 'Imputation', 'Lambda Function'], 'Spacy Introduction': ['Must Read This', 'Introduction to NLP', 'Install Spacy', 'Introduction to Spacy', 'Tokenization', 'Parts of Speech [POS] Tagging', 'Dependency Visualization', 'Named Entity Recognition (NER)', 'Sentence Segmentation', 'Rule Based Phrase Matching', 'Regular Expression Part 1', 'Regular Expression Part 2', 'Processing Pipeline in Spacy', 'Hashtags and Emoji Detection'], 'Working with Text Files': ['String Formatting', 'Working with open() Files in write() Mode Part 1', 'Working with open() Files in write() Mode Part 2', 'Working with open() Files in write() Mode Part 3', 'Read and Evaluate the Files', 'Reading and Writing .CSV and .TSV Files with Pandas', 'Reading and Writing .XLSX Files with Pandas', 'Reading and Writing .JSON Files', 'Reading Files from URL Links', 'Extract Text Data From PDF', 'Record the Audio and Convert to Text', 'Convert Audio in Text Data', 'Text to Speech Generation'], 'Complete Text Cleaning and Preprocessing': ['Must Read This', 'Introduction', 'Word Counts', 'Characters Counts', 'Average Word Length', 'Stop Words Count', 'Count #hashtag and @mentions', 'Numeric Digit Count', 'Upper case Words Count', 'Lower case Conversion', 'Contraction to Expansion', 'Count and Remove Emails', 'Count and Remove URLs', 'Remove RT from Tweeter Data', 'Special Chars Removal and Punctuation Removal', 'Remove Multiple Spaces', 'Remove HTML Tags', 'Remove Accented Chars', 'Remove Stop Words', 'Convert into Base or Root Form of Words', 'Common Words Removal', 'Rare Words Removal', 'Word Cloud Visualization', 'Spelling Correction', 'Tokenization with TextBlob', 'Nouns Detection', 'Language Translation and Detection', 'Sentiment Prediction with TextBlob'], 'Text Cleaning and Preprocessing in Python | Software Packaging for PIP Install': ['Code Files Setup', 'Readme and License File Preparation', 'Setup.py Preparation', 'Utils.py Code Along Part 1', 'Utils.py Code Along Part 2', 'Utils.py Code Along Part 3', 'Utils.py Code Along Part 4', '__init__.py Code Along', 'GitHub Account Setup and Package Upload', 'SSH Key Setup for GitHub', 'Install Preprocess Python Package', 'Removing the Errors Part 1', 'Removing the Errors Part 2', 'Testing the Package'], 'Introduction to Machine Learning with Scikit-Learn': ['Logistic Regression Intuition', 'Support Vector Machine Intuition', 'Decision Tree Intuition', 'Random Forest Intuition', 'L2 Regularization', 'L1 Regularization', 'Model Evaluation Metrics: Accuracy, Precision, Recall, and Confusion Matrix', 'Model Evaluation Metrics: ROC and AUC', 'Code Along in Python Part 1', 'Code Along in Python Part 2', 'Code Along in Python Part 3', 'Code Along in Python Part 4'], 'Spam Text Classification': ['Text Feature Extraction Intuition Part 1', 'Text Feature Extraction Intuition Part 2', 'Bag of Words (BoW) Code Along in Python', 'Term Frequency (TF) Code Along in Python', 'Inverse Document Frequency (IDF) Code Along in Python', 'TFIDF Code Along in Python', 'Load Spam Dataset', 'Balance Dataset', 'Exploratory Data Analysis (EDA)', 'Data Preparation for Training', 'Build and Train SVM and Random Forest Models', 'Test Your Model with Real Data']}"
https://www.udemy.com/course/data-science-datamining-natural-language-processing-in-r/,Data Science:Data Mining & Natural Language Processing in R,"Harness the Power of Machine Learning in R for Data/Text Mining, & Natural Language Processing with Practical Examples",Minerva Singh,$11.99,4.8,307,13 total hours,110 lectures,All Levels,"{'INTRODUCTION TO THE COURSE: The Key Concepts and Software Tools': ['Introduction', 'Data and Scripts For the Course', 'Introduction to R and RStudio', 'Start with Rattle', 'Troubleshooting For Rattle', 'Conclusion to Section 1'], 'Reading in Data from Different Sources in R': ['Read in Data from CSV and Excel Files', 'Read Data from a Database', 'Read Data from JSON', 'Read in Data from Online CSVs', 'Read in Data from Online HTML Tables-Part 1', 'Read in Data from Online HTML Tables-Part 2', 'Read Data from Other Sources', 'Conclusions to Section 2'], 'Exploratory Data Analysis and Data Visualization in R': ['Remove NAs', 'More Data Cleaning', 'Exploratory Data Analysis(EDA): Basic Visualizations with R', 'More Exploratory Data Analysis with xda', 'Introduction to dplyr for Data Summarizing-Part 1', 'Introduction to dplyr for Data Summarizing-Part 2', 'Data Exploration & Visualization With dplyr & ggplot2', 'Pre-Processing Dates-Part 1', 'Pre-Processing Dates-Part 2', 'Plotting Temporal Data in R', 'Twist in the (Temporal) Data', 'Associations Between Quantitative Variables- Theory', 'Testing for Correlation', 'Evaluate the Relation Between Nominal Variables', ""Cramer's V for Examining the Strength of Association Between Nominal Variable"", 'Section 3 Quiz'], 'Data Mining for Patterns and Relationships': ['What is Data Mining?', 'Association Mining with Apriori', 'Apriori with Real Data', 'Visualize the Rules', 'Association Mining with Eclat', 'Eclat with Real Data'], 'Machine Learning for Data Science': ['How is Machine Learning Different from Statistical Data Analysis?', 'What is Machine Learning (ML) About? Some Theoretical Pointers'], 'Unsupervised Classification- R': ['K-means Clustering', 'Fuzzy K-Means Clustering', 'Weighted K-Means Clustering', 'Hierarchical Clustering in R', 'Expectation-Maximization (EM) in R', 'Use Rattle for Unsupervised Clustering', 'Conclusions to Section 6', 'Section 6 Quiz'], 'Dimension Reduction': ['Dimensionality Reduction-theory', 'PCA', 'Removing Highly Correlated Predictor Variables', 'Variable Selection Using LASSO Regression', 'Variable Selection With FSelector', 'Boruta Analysis for Feature Selection', 'Conclusions to Section 7', 'Section 7 Quiz'], 'Supervised Learning Theory': ['Some Basic Supervised Learning Concepts', 'Pre-processing for Supervised Learning'], 'Supervised Learning: Classification': ['Binary Classification', 'What are GLMs?', 'Logistic Regression Models as Binary Classifiers', 'Linear Discriminant Analysis (LDA)', 'Binary Classifier with PCA', 'Obtain Binary Classification Accuracy Metrics', 'Multi-class Classification Models', 'Our Multi-class Classification Problem', 'Classification Trees', 'More on Classification Tree Visualization', 'Decision Trees', 'Random Forest (RF) classification', 'Examine Individual Variable Importance for Random Forests', 'GBM Classification', 'Support Vector Machines (SVM) for Classification', 'More SVM for Classification', 'Conclusions to Section 9', 'Section 9 Quiz'], 'Supervised Learning: Regression': ['Ridge Regression in R', 'LASSO Regression in R', 'Generalized Additive Models (GAMs) in R', 'Boosted GAMs', 'MARS Regression', 'CART-Regression Trees in R', 'Random Forest (RF) Regression', 'GBM Regression', 'Compare Models', 'Conclusions to Section 10']}"
https://www.udemy.com/course/natural-language-processing-real-world-projects-in-python/,Natural Language Processing Real-World Projects in Python,"Solve 3 real Business Problems. Build Robust AI, NLP models for Sentiment, Security & Stock News Domain..",Shan Singh,$11.99,4.4,234,5.5 total hours,36 lectures,All Levels,"{'Introduction to this course': ['Intro To course', 'How to follow this course-Must Watch'], 'Project 1-->>Predict the sentiments of Amazon Customer': ['Introduction to Business Problem & Dataset', 'Datasets & Resources', 'Perform Data Pre-processing on Amazon Data', 'Apply Exploratory Data Analysis on Data', 'Intuition behind Bag of Words', 'Intuition behind Logistic Regression --part 1', 'Intuition behind Logistic Regression --part 2', 'Apply Bag of Words on data', 'Automate your NLP model & Machine Learning Model', 'Intuition behind TF-IDF --part 1', 'Intuition behind TF-IDF --part 2', 'Applying algorithms of NLP & Machine Learning', 'Data Preparation for Modelling Purpose', 'What is Imbalance Data & how to handle it??', 'Part1-- What is Cross-validation & when to use it??', 'Part2-- What is Cross-validation & when to use it??', 'Applying Techniques of Handling Imbalance Data & Cross Validation'], 'Project2---->>> Predict the Stock News Headlines': ['Introduction to Business Problem & Dataset', 'Datasets & Resources', 'Data Pre-processing on Data.', 'Perfrom Data Wrangling & Merging', 'Intuition Behind Random Forest Part-1', 'Intuition behind Random Forest --part 2', 'Apply Bag of words and Random forest on Data', 'Model Evaluation..', 'Intuition Behind Naive Bayes-Part 1', 'Intuition Behind Naive Bayes- Part 2', 'Apply Naive Bayes on Data..'], 'Project 3-->>> Predicting the strength of Password': ['Introduction to Business Problem & Dataset', 'Datasets & Resources', 'Exploring Data', 'Apply TF-IDF on data', 'Apply Logistic Regression on Data', 'Checking Accuracy of Model']}"
https://www.udemy.com/course/complete-natural-language-processing-nlp-with-spacy-nltk/,Natural Language Processing (NLP) in Python with 8 Projects,"Work on 8 Projects, Learn Natural Language Processing Python, Machine Learning, Deep Learning, SpaCy, NLTK, Sklearn, CNN","Ankit Mistry, Vijay Gadhave, Data Science & Machine Learning Academy",$15.99,4.4,170,10.5 total hours,93 lectures,All Levels,"{'Welcome': ['Course Overview', 'Reviews UPDATE', 'Introduction to NLP', 'Course FAQs'], 'Installation & Setup': ['Course Installation', 'Local Installation Steps', 'Links to Notebooks (As taught in Lectures)', 'Links to Notebooks (More explanatory notebook for refrence)'], 'Basics of Natural Language Processing': ['Section : Introduction', 'Tokenization Basic Part - 1', 'Tokenization Basic Part - 2', 'Tokenization Basic Part - 3', 'Stemming & Lemmatization - 1', 'Stemming & Lemmatization - 2', 'Stop Words', 'Vocabulary and Matching Part - 1', 'Vocabulary and Matching Part - 2 (Rule Based)', 'Vocabulary and Matching Part - 3 (Phrase Based)', 'Parts of Speech Tagging', 'Named Entity Recognition', 'Sentence Segmentation', 'NLP Basics'], 'Project 1 : Spam Message Classification': ['Business Problem & Dataset', 'Data Exploration & Preprocessing', 'Split Data in Training & Testing', 'Apply Random Forest', 'Apply Support vector Machine (SVM)', 'Predict Testing Data both model', 'Quiz'], 'Project 2 : Restaurant Review Prediction (Good or bad)': ['Business Problem', 'Cleaning Text Data with NLTK - 1', 'Cleaning Text Data with NLTK - 2', 'Bag of Word Model', 'Apply Naive Bayes Algorithm'], 'Project 3 : IMDB, Amazon and Yelp review Classification': ['Review Classification Part -1', 'Review Classification Part - 2'], 'Project 4 : Automated Text Summarization': ['Importing the libraries and Dataset', 'Create Word Frequency Counter', 'Calculate Sentence Score', 'Extract summary of document'], 'Project 5 : Twitter sentiment Analysis': ['Setting up Twitter Developer application', 'Fetch Tweet from Tweeter server', 'Find Setiment from Tweets'], 'Deep Learning Basics': ['The Neuron', 'Activation Function', 'Cost Function', 'Gradient Descent and Back-Propagation'], 'Word Embeddings': ['Introduction to Word Embedding', 'Train Model for Embedding - I', 'Train Model for Embedding - II', 'Embeddings with Pretrained model', 'Word Embeddings']}"
https://www.udemy.com/course/natural-language-processing-python-nltk/,NLTK: Build Document Classifier & Spell Checker with Python,NLP with Python - Analyzing Text with the Natural Language Toolkit (NLTK) - Natural Language Processing (NLP) Tutorial,"GoTrained Academy, Waqar Ahmed",$11.99,4.5,156,5.5 total hours,46 lectures,Intermediate,"{'Getting Started with NLTK (Natural Language Processing Toolkit)': ['Introduction to NLP', 'Course Technical Requirements', 'Installing and Setting Up NLTK', 'NLTK Accessing Texts', 'Basic Functions: concordance, similar, dispersion_plot, count', 'Summary: NLTK Basic Functions', 'Frequency Distribution with NLTK', 'Frequency Distribution on Your Text with NLTK'], 'Do you want to learn a specific NLP topic?': ['Do you want to learn a specific NLTK or NLP topic?'], 'Corpora': ['Accessing Corpora', 'Loading Your Own Corpus', 'Conditional Frequency Distribution', 'Lexical Resources Vocabulary', 'Terminology', 'NLP Basic Terminology'], 'Processing Raw Text with NLTK': ['NLP Pipeline', 'Tokenization', 'What is Token?', 'Regular Expressions', 'Applications of Regex', 'Stemming', 'Lemmatization', 'Regex for Tokenization'], 'Categorizing and Tagging Words with NLTK': ['Tagger', 'Tagged Corpus', 'The Default Tagger', 'Regexp Tagger', 'Unigram Tagger', 'Ngram Tagger', 'POS Tagging'], 'Sentiment Analysis: Text Classification Practical Projects': ['Machine Learning Overview', 'Logic Of Naive Bayes', 'Project #1: Gender Prediction Application - Part 1', 'Project #1: Gender Prediction Application - Part 2', 'Project #1: Gender Prediction Application - Part 3', 'Project #2: Document Classifier Application'], 'Extracting Info from Text': ['Information Extraction Architecture', 'Chunking Overiew', 'Chunking in Coding', 'Exercise: Named Entity Recognition', 'Chinking', 'Stanford NLP API', 'Chunking and Chinking'], 'NLP Course Concolusion': ['Conclusion'], 'Advanced NLTK Topics': ['Edit Distance Example', 'Edit Distance - Spelling Checker', 'Appendix: List of Correct Words for Spelling Checkers', 'Edit Distance - Plagiarism Checker / Translation Memory'], 'Bonus Material': ['More NLP Tutorials', ""What's Next for You?""]}"
https://www.udemy.com/course/nlp-with-transformers/,Natural Language Processing: NLP With Transformers in Python,"Learn next-generation NLP with transformers for sentiment analysis, Q&A, similarity search, NER, and more",James Briggs,$11.99,4.6,157,11.5 total hours,99 lectures,All Levels,"{'Introduction': ['Introduction', 'Course Overview', 'Environment Setup', 'Alternative Setup', 'CUDA Setup'], 'NLP and Transformers': ['The Three Eras of AI', 'Pros and Cons of Neural AI', 'Word Vectors', 'Recurrent Neural Networks', 'Long Short-Term Memory', 'Encoder-Decoder Attention', 'Self-Attention', 'Multi-head Attention', 'Positional Encoding', 'Transformer Heads'], 'Preprocessing for NLP': ['Stopwords', 'Tokens Introduction', 'Model-Specific Special Tokens', 'Stemming', 'Lemmatization', 'Unicode Normalization - Canonical and Compatibility Equivalence', 'Unicode Normalization - Composition and Decomposition', 'Unicode Normalization - NFD and NFC', 'Unicode Normalization - NFKD and NFKC'], 'Attention': ['Attention Introduction', 'Alignment With Dot-Product', 'Dot-Product Attention', 'Self Attention', 'Bidirectional Attention', 'Multi-head and Scaled Dot-Product Attention'], 'Language Classification': ['Introduction to Sentiment Analysis', 'Prebuilt Flair Models', 'Introduction to Sentiment Models With Transformers', 'Tokenization And Special Tokens For BERT', 'Making Predictions'], '[Project] Sentiment Model With TensorFlow and Transformers': ['Project Overview', 'Getting the Data (Kaggle API)', 'Preprocessing', 'Building a Dataset', 'Dataset Shuffle, Batch, Split, and Save', 'Build and Save', 'Loading and Prediction'], 'Long Text Classification With BERT': ['Classification of Long Text Using Windows', 'Window Method in PyTorch'], 'Named Entity Recognition (NER)': ['Introduction to spaCy', 'Extracting Entities', 'NER Walkthrough', 'Authenticating With The Reddit API', 'Pulling Data With The Reddit API', 'Extracting ORGs From Reddit Data', 'Getting Entity Frequency', 'Entity Blacklist', 'NER With Sentiment', 'NER With roBERTa'], 'Question and Answering': ['Open Domain and Reading Comprehension', 'Retrievers, Readers, and Generators', 'Intro to SQuAD 2.0', 'Processing SQuAD Training Data', '(Optional) Processing SQuAD Training Data with Match-Case', 'Processing SQuAD Dev Data', 'Our First Q&A Model'], 'Metrics For Language': ['Q&A Performance With Exact Match (EM)', 'ROUGE in Python', 'Applying ROUGE to Q&A', 'Recall, Precision and F1', 'Longest Common Subsequence (LCS)', 'Q&A Performance With ROUGE']}"
https://www.udemy.com/course/natural-language-processing-with-python-and-nltk/,Natural Language Processing (NLP) with Python and NLTK,"Practical Approach : Collecting and Preprocessing text data, Data Visualization, Model Building and NLP Apps",CARLOS QUIROS,$11.99,4.1,147,7 total hours,48 lectures,Beginner,"{'Environment Setup and Installation': ['Introduction to the course NLP with Python and NLTK', 'Before starting this course read this Guidelines', 'Resources', 'Environment Setup: Anaconda for Windows', 'VirtualBox and Ubuntu', 'Environment Setup: Anaconda for Linux', 'Codes in Python 3.6 and Installation Instructions'], 'Machine Learning Review': ['Introduction', 'Scikit-Learn', 'Machine Learning concepts: Overfitting, Underfitting and Cross Validation', 'Classification model and evaluation: Confusion matrix and ROC curve', 'Logistic Regression', 'Support Vector Machines', 'Decision Trees and Random Forest', 'KNN algorithm', 'GridSearchCV', 'K-means Clustering', 'PCA'], 'Collecting Text Data': ['Regular Expressions - part 1', 'Regular Expressions - part 2', 'NLTK Installation', 'Web Scraping', 'Extracting text content from different media with Textract'], 'Text Data Preprocessing': ['Sentence splitter and Tokenization', 'Stemming and Lemmatization', 'Stop word removal', 'Part of Speech (POS) tagging', 'Chunking', 'N-grams', 'Bag of Words: CountVectorizer, TfidfVectorizer'], 'Text Data Visualization': ['Frequency Chart', 'Co-Occurrence Matrix', 'Word Cloud'], 'Model building': ['Text Similarity', 'Text Clustering', 'Latent Semantic Analysis', 'Topic Modelling', 'Text Classification', 'Sentiment Analysis', 'Word2Vec', 'Recommender Systems : Collaborative Filtering part 1', 'Recommender Systems : Collaborative Filtering part 2'], 'NLP applications': ['Text Summarization app', 'Spam detector app', 'Word2Vec on Wikipedia', 'Recommender System with KNN', 'Social Media Mining on Twitter', 'The End Class']}"
